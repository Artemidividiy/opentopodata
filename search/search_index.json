{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Open Topo Data Open Topo Data is a REST API server for your elevation data. Host your own or use the free public API . Host your own git clone github.com/ajnisbet/opentopodata cd opentopodata make build make run curl http://localhost:5000/v1/test-dataset?locations = 56 .35,123.90 { \"results\" : [{ \"elevation\" : 815.0 , \"location\" : { \"lat\" : 56.0 , \"lng\" : 123.0 } }], \"status\" : \"OK\" } See the server docs for more about configuration and adding datasets. Public API I'm hosting a public API at api.opentopodata.org . To keep the public API sustainable, some limitations are applied. I hope to raise these limits as I get a better sense of demand. Max 100 locations per request. Max 1 call per second. Max 100 calls per day. The following datasets are available on the public API, with elevation shown for downtown Denver, Colorado (39.7471, -104.9963). Dataset name Resolution Extent Source API link (Denver, CO) etopo1 1.8 km Global, including bathymetry and ice surface elevation near poles. NOAA 1596 m srtm90m 90 m Latitudes -60 to 60. NASA 1603 m srtm30m 30 m Latitudes -60 to 60. NASA 1604 m eudem25m 25 m Europe. EEA Not in dataset bounds aster30m 30 m Global. NASA 1591 m ned10m 10 m Continental USA, Hawaii, parts of Alaska. USGS 1590 m See the API docs for more about request formats and parameters. Support Want help getting Open Topo Data running? Send me an email at andrew@opentopodata.org .","title":"Introduction"},{"location":"#host-your-own","text":"git clone github.com/ajnisbet/opentopodata cd opentopodata make build make run curl http://localhost:5000/v1/test-dataset?locations = 56 .35,123.90 { \"results\" : [{ \"elevation\" : 815.0 , \"location\" : { \"lat\" : 56.0 , \"lng\" : 123.0 } }], \"status\" : \"OK\" } See the server docs for more about configuration and adding datasets.","title":"Host your own"},{"location":"#public-api","text":"I'm hosting a public API at api.opentopodata.org . To keep the public API sustainable, some limitations are applied. I hope to raise these limits as I get a better sense of demand. Max 100 locations per request. Max 1 call per second. Max 100 calls per day. The following datasets are available on the public API, with elevation shown for downtown Denver, Colorado (39.7471, -104.9963). Dataset name Resolution Extent Source API link (Denver, CO) etopo1 1.8 km Global, including bathymetry and ice surface elevation near poles. NOAA 1596 m srtm90m 90 m Latitudes -60 to 60. NASA 1603 m srtm30m 30 m Latitudes -60 to 60. NASA 1604 m eudem25m 25 m Europe. EEA Not in dataset bounds aster30m 30 m Global. NASA 1591 m ned10m 10 m Continental USA, Hawaii, parts of Alaska. USGS 1590 m See the API docs for more about request formats and parameters.","title":"Public API"},{"location":"#support","text":"Want help getting Open Topo Data running? Send me an email at andrew@opentopodata.org .","title":"Support"},{"location":"api/","text":"API Documentation A public API is available for testing at api.opentopodata.org . Open Topo Data has a single endpoint. GET /v1/<dataset_name> Reads the elevation from a given dataset. The dataset must match one of the options in config.yaml . Latitudes and longitudes should be in EPSG:4326 , they will be converted internally to whatever the dataset used. Args locations : Required. Either latitutde,longitude pairs, each separated by a pipe character | . Example: locations=12.5,160.2|-10.6,130 . Google polyline format . Example: locations=gfo}EtohhU . interpolation : How to interpolate between the points in the dataset. Options: nearest , bilinear , cubic . Default: nearest . Response A json object, compatible with the Google Maps Elevation API. status : Will be OK for a successful request, INVALID_REQUEST for an input error, and SERVER_ERROR for a different error. Required. error : Description of what went wrong, when status isn't OK . results : List of elevations for each location, in same order as input. Only provided for OK status. results[].elevation : Elevation, using units and datum from the dataset. May be NaN if the dataset has a NODATA value at the given location. May be null if the given location is outside the dataset bounds. results[].location.lat : Latitude as parsed by Open Topo Data. results[].location.lng : Longitude as parsed by Open Topo Data. Example GET api.opentopodata.org/v1/srtm90m?locations=-43.5,172.5|27.6,1.98&interpolation=cubic { \"results\" : [ { \"elevation\" : 45 , \"location\" : { \"lat\" : -43.5 , \"lng\" : 172.5 } }, { \"elevation\" : 402 , \"location\" : { \"lat\" : 27.6 , \"lng\" : 1.98 } } ], \"status\" : \"OK\" }","title":"API docs"},{"location":"api/#api-documentation","text":"A public API is available for testing at api.opentopodata.org . Open Topo Data has a single endpoint.","title":"API Documentation"},{"location":"api/#get-v1ltdataset_namegt","text":"Reads the elevation from a given dataset. The dataset must match one of the options in config.yaml . Latitudes and longitudes should be in EPSG:4326 , they will be converted internally to whatever the dataset used.","title":"GET /v1/&lt;dataset_name&gt;"},{"location":"api/#args","text":"locations : Required. Either latitutde,longitude pairs, each separated by a pipe character | . Example: locations=12.5,160.2|-10.6,130 . Google polyline format . Example: locations=gfo}EtohhU . interpolation : How to interpolate between the points in the dataset. Options: nearest , bilinear , cubic . Default: nearest .","title":"Args"},{"location":"api/#response","text":"A json object, compatible with the Google Maps Elevation API. status : Will be OK for a successful request, INVALID_REQUEST for an input error, and SERVER_ERROR for a different error. Required. error : Description of what went wrong, when status isn't OK . results : List of elevations for each location, in same order as input. Only provided for OK status. results[].elevation : Elevation, using units and datum from the dataset. May be NaN if the dataset has a NODATA value at the given location. May be null if the given location is outside the dataset bounds. results[].location.lat : Latitude as parsed by Open Topo Data. results[].location.lng : Longitude as parsed by Open Topo Data.","title":"Response"},{"location":"api/#example","text":"GET api.opentopodata.org/v1/srtm90m?locations=-43.5,172.5|27.6,1.98&interpolation=cubic { \"results\" : [ { \"elevation\" : 45 , \"location\" : { \"lat\" : -43.5 , \"lng\" : 172.5 } }, { \"elevation\" : 402 , \"location\" : { \"lat\" : 27.6 , \"lng\" : 1.98 } } ], \"status\" : \"OK\" }","title":"Example"},{"location":"server/","text":"Open Topo Data Server Documentation Getting started with docker git clone git@github.com:ajnisbet/opentopodata.git cd opentopodata make build make run This will start a server on localhost:5000 with a small demo dataset called test-dataset . Check out the API docs for info about requests and responses. Dataset support Open Topo Data supports all georeferenced raster formats supported by GDAL (e.g, .tiff , .hgt , .jp2 ). Datasets can take one of two formats: A single raster file. A collection of square raster tiles which follow the SRTM naming convention: the file is named for the lower left corner. So a file named N30W120.tiff would span from 30 to 31 degrees latitude, and -120 to -119 degrees longitude. By default tiles are 1\u00b0 by 1\u00b0 and the coordinates are in WGS84, but this can be configured. Configuration Open Topo Data is configured by a config.yaml file. If that file is missing it will fallback to example-config.yaml . A config might look like: max_locations_per_request : 100 datasets : - name : etopo1 path : data/etopo1/ - name : srtm90m path : data/srtm-90m-v3/ filename_epsg : 4326 filename_tile_size : 1 corresponding to a directory structure: opentopodata | \u2514\u2500\u2500\u2500data | \u251c\u2500\u2500\u2500etopo1 | | | \u2514\u2500\u2500\u2500etopo1-dem.geotiff | \u2514\u2500\u2500\u2500srtm-90m-v3 | \u251c\u2500\u2500\u2500N00E000.hgt \u251c\u2500\u2500\u2500N00E001.hgt \u251c\u2500\u2500\u2500N00E002.hgt \u251c\u2500\u2500\u2500etc... which would expose localhost:5000/v1/etopo1 and localhost:5000/v1/srtm90m . Config spec max_locations_per_request : Requests with more than this many locations will return a 400 error. Default: 100 . datasets[].name : Dataset name, used in url. Required. datasets[].path : Path to folder containing the dataset. If the dataset is a single file it must be placed inside a folder. This path is relative to the repository directory inside docker. I suggest placing datasets inside the provided data folder, which is mounted in docker by make run . Files can be nested arbitrarily inside the dataset path. Required. datasets[].filename_epsg : For tiled datasets, the projection of the filename coordinates. The default value is 4326 , which is latitude/longitude with the WGS84 datum. datasets[].filename_tile_size : For tiled datasets, how large each square tile is, in the units of filename_epsg . For example, a lat,lon location of 38.2,121.2 would lie in the tile N38W121 for a tile size of 1, but lie in N35W120 for a tile size of 5. Default: 1 . Adding datasets An important goal of Open Topo Data is make is easy to add new datasets. The included dataset is very low resolution (about 100km) and is intended only for testing. Adding a new dataset takes two steps: placing the dataset in the data directory adding the path to the dataset in config.yaml . Adding ETOPO1 Download the grid-registered .tif file from noaa.gov to the data directory and unzip. mkdir ./data/etopo1 wget -P ./data/etopo1 https://www.ngdc.noaa.gov/mgg/global/relief/ETOPO1/data/ice_surface/grid_registered/georeferenced_tiff/ETOPO1_Ice_g_geotiff.zip unzip ./data/etopo1/ETOPO1_Ice_g_geotiff.zip rm ./data/etopo1/ETOPO1_Ice_g_geotiff.zip Create a file config.yaml with the following contents datasets : - name : etopo1 path : data/etopo1/ Rebuild to enable the new dataset at localhost:5000/v1/etopo1?locations=27.98,86.92 make build && make run","title":"Server docs"},{"location":"server/#open-topo-data-server-documentation","text":"","title":"Open Topo Data Server Documentation"},{"location":"server/#getting-started-with-docker","text":"git clone git@github.com:ajnisbet/opentopodata.git cd opentopodata make build make run This will start a server on localhost:5000 with a small demo dataset called test-dataset . Check out the API docs for info about requests and responses.","title":"Getting started with docker"},{"location":"server/#dataset-support","text":"Open Topo Data supports all georeferenced raster formats supported by GDAL (e.g, .tiff , .hgt , .jp2 ). Datasets can take one of two formats: A single raster file. A collection of square raster tiles which follow the SRTM naming convention: the file is named for the lower left corner. So a file named N30W120.tiff would span from 30 to 31 degrees latitude, and -120 to -119 degrees longitude. By default tiles are 1\u00b0 by 1\u00b0 and the coordinates are in WGS84, but this can be configured.","title":"Dataset support"},{"location":"server/#configuration","text":"Open Topo Data is configured by a config.yaml file. If that file is missing it will fallback to example-config.yaml . A config might look like: max_locations_per_request : 100 datasets : - name : etopo1 path : data/etopo1/ - name : srtm90m path : data/srtm-90m-v3/ filename_epsg : 4326 filename_tile_size : 1 corresponding to a directory structure: opentopodata | \u2514\u2500\u2500\u2500data | \u251c\u2500\u2500\u2500etopo1 | | | \u2514\u2500\u2500\u2500etopo1-dem.geotiff | \u2514\u2500\u2500\u2500srtm-90m-v3 | \u251c\u2500\u2500\u2500N00E000.hgt \u251c\u2500\u2500\u2500N00E001.hgt \u251c\u2500\u2500\u2500N00E002.hgt \u251c\u2500\u2500\u2500etc... which would expose localhost:5000/v1/etopo1 and localhost:5000/v1/srtm90m .","title":"Configuration"},{"location":"server/#config-spec","text":"max_locations_per_request : Requests with more than this many locations will return a 400 error. Default: 100 . datasets[].name : Dataset name, used in url. Required. datasets[].path : Path to folder containing the dataset. If the dataset is a single file it must be placed inside a folder. This path is relative to the repository directory inside docker. I suggest placing datasets inside the provided data folder, which is mounted in docker by make run . Files can be nested arbitrarily inside the dataset path. Required. datasets[].filename_epsg : For tiled datasets, the projection of the filename coordinates. The default value is 4326 , which is latitude/longitude with the WGS84 datum. datasets[].filename_tile_size : For tiled datasets, how large each square tile is, in the units of filename_epsg . For example, a lat,lon location of 38.2,121.2 would lie in the tile N38W121 for a tile size of 1, but lie in N35W120 for a tile size of 5. Default: 1 .","title":"Config spec"},{"location":"server/#adding-datasets","text":"An important goal of Open Topo Data is make is easy to add new datasets. The included dataset is very low resolution (about 100km) and is intended only for testing. Adding a new dataset takes two steps: placing the dataset in the data directory adding the path to the dataset in config.yaml .","title":"Adding datasets"},{"location":"server/#adding-etopo1","text":"Download the grid-registered .tif file from noaa.gov to the data directory and unzip. mkdir ./data/etopo1 wget -P ./data/etopo1 https://www.ngdc.noaa.gov/mgg/global/relief/ETOPO1/data/ice_surface/grid_registered/georeferenced_tiff/ETOPO1_Ice_g_geotiff.zip unzip ./data/etopo1/ETOPO1_Ice_g_geotiff.zip rm ./data/etopo1/ETOPO1_Ice_g_geotiff.zip Create a file config.yaml with the following contents datasets : - name : etopo1 path : data/etopo1/ Rebuild to enable the new dataset at localhost:5000/v1/etopo1?locations=27.98,86.92 make build && make run","title":"Adding ETOPO1"}]}